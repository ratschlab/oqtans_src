This is flex.info, produced by makeinfo version 4.13 from flex.texi.

INFO-DIR-SECTION Programming
START-INFO-DIR-ENTRY
* flex: (flex).      Fast lexical analyzer generator (lex replacement).
END-INFO-DIR-ENTRY

   The flex manual is placed under the same licensing conditions as the
rest of flex:

   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2012 The
Flex Project.

   Copyright (C) 1990, 1997 The Regents of the University of California.
All rights reserved.

   This code is derived from software contributed to Berkeley by Vern
Paxson.

   The United States Government has rights in this work pursuant to
contract no. DE-AC03-76SF00098 between the United States Department of
Energy and the University of California.

   Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

  1.  Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

  2. Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the
     distribution.

   Neither the name of the University nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

   THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


Indirect:
flex.info-1: 1627
flex.info-2: 288419

Tag Table:
(Indirect)
Node: Top1627
Node: Copyright7694
Node: Reporting Bugs9213
Node: Introduction9518
Node: Simple Examples10346
Node: Format13633
Node: Definitions Section14046
Ref: Definitions Section-Footnote-116304
Node: Rules Section16372
Node: User Code Section17529
Node: Comments in the Input17967
Node: Patterns19334
Ref: case and character ranges26158
Node: Matching30169
Node: Actions33453
Node: Generated Scanner42422
Node: Start Conditions47437
Node: Multiple Input Buffers57974
Ref: Scanning Strings64510
Node: EOF66140
Node: Misc Macros67726
Node: User Values70578
Node: Yacc72909
Node: Scanner Options73804
Node: Options for Specifying Filenames76560
Ref: option-header76786
Ref: option-outfile77498
Ref: option-stdout77823
Node: Options Affecting Scanner Behavior78805
Ref: option-case-insensitive79046
Ref: option-lex-compat79479
Ref: option-batch80011
Ref: option-interactive80535
Ref: option-7bit81889
Ref: option-8bit83193
Ref: option-default83605
Ref: option-always-interactive83669
Ref: option-posix84273
Ref: option-stack85420
Ref: option-stdinit85528
Ref: option-yylineno86006
Ref: option-yywrap86449
Node: Code-Level And API Options86717
Ref: option-ansi-definitions86944
Ref: option-ansi-prototypes87196
Ref: option-bison-bridge87443
Ref: option-bison-locations87782
Ref: option-noline88042
Ref: option-reentrant88556
Ref: option-c++89167
Ref: option-array89293
Ref: option-pointer89391
Ref: option-prefix89519
Ref: option-main91047
Ref: option-nounistd91231
Ref: option-yyclass91739
Node: Options for Scanner Speed and Size92225
Ref: option-align92774
Ref: option-ecs93275
Ref: option-meta-ecs94311
Ref: option-read94798
Ref: option-full96680
Ref: option-fast96875
Node: Debugging Options97800
Ref: option-backup97987
Ref: option-debug98532
Ref: option-perf-report99254
Ref: option-nodefault99880
Ref: option-trace100198
Ref: option-nowarn100489
Ref: option-verbose100557
Ref: option-warn100986
Node: Miscellaneous Options101205
Node: Performance101662
Node: Cxx111904
Node: Reentrant119506
Node: Reentrant Uses120183
Node: Reentrant Overview121744
Node: Reentrant Example122543
Node: Reentrant Detail123317
Node: Specify Reentrant123750
Node: Extra Reentrant Argument124397
Node: Global Replacement125648
Node: Init and Destroy Functions126876
Node: Accessor Methods129393
Node: Extra Data130735
Node: About yyscan_t133000
Node: Reentrant Functions133395
Ref: bison-functions134877
Node: Lex and Posix135616
Node: Memory Management142987
Ref: memory-management143133
Node: The Default Memory Management143361
Ref: The Default Memory Management-Footnote-1147167
Node: Overriding The Default Memory Management147320
Ref: Overriding The Default Memory Management-Footnote-1149717
Node: A Note About yytext And Memory149881
Node: Serialized Tables151114
Ref: serialization151258
Node: Creating Serialized Tables152023
Node: Loading and Unloading Serialized Tables153631
Node: Tables File Format155399
Node: Diagnostics162413
Node: Limitations165822
Node: Bibliography167770
Node: FAQ168443
Node: When was flex born?172683
Node: How do I expand backslash-escape sequences in C-style quoted strings?173060
Node: Why do flex scanners call fileno if it is not ANSI compatible?174364
Node: Does flex support recursive pattern definitions?175159
Node: How do I skip huge chunks of input (tens of megabytes) while using flex?176005
Node: Flex is not matching my patterns in the same order that I defined them.176472
Node: My actions are executing out of order or sometimes not at all.178217
Node: How can I have multiple input sources feed into the same scanner at the same time?178990
Node: Can I build nested parsers that work with the same input file?180978
Node: How can I match text only at the end of a file?181984
Node: How can I make REJECT cascade across start condition boundaries?182788
Node: Why cant I use fast or full tables with interactive mode?183802
Node: How much faster is -F or -f than -C?185060
Node: If I have a simple grammar cant I just parse it with flex?185372
Node: Why doesn't yyrestart() set the start state back to INITIAL?185853
Node: How can I match C-style comments?186480
Node: The period isn't working the way I expected.187290
Node: Can I get the flex manual in another format?188537
Node: Does there exist a "faster" NDFA->DFA algorithm?189026
Node: How does flex compile the DFA so quickly?189536
Node: How can I use more than 8192 rules?190503
Node: How do I abandon a file in the middle of a scan and switch to a new file?191913
Node: How do I execute code only during initialization (only before the first scan)?192466
Node: How do I execute code at termination?193243
Node: Where else can I find help?193569
Node: Can I include comments in the "rules" section of the file?193942
Node: I get an error about undefined yywrap().194321
Node: How can I change the matching pattern at run time?194797
Node: How can I expand macros in the input?195159
Node: How can I build a two-pass scanner?196191
Node: How do I match any string not matched in the preceding rules?197107
Node: I am trying to port code from AT&T lex that uses yysptr and yysbuf.198016
Node: Is there a way to make flex treat NULL like a regular character?198811
Node: Whenever flex can not match the input it says "flex scanner jammed".199332
Node: Why doesn't flex have non-greedy operators like perl does?199975
Node: Memory leak - 16386 bytes allocated by malloc.201328
Ref: faq-memory-leak201626
Node: How do I track the byte offset for lseek()?202593
Node: How do I use my own I/O classes in a C++ scanner?204102
Node: How do I skip as many chars as possible?204945
Node: deleteme00206019
Node: Are certain equivalent patterns faster than others?206459
Node: Is backing up a big deal?209877
Node: Can I fake multi-byte character support?211783
Node: deleteme01213224
Node: Can you discuss some flex internals?214333
Node: unput() messes up yy_at_bol216577
Node: The | operator is not doing what I want217679
Node: Why can't flex understand this variable trailing context pattern?219225
Node: The ^ operator isn't working220474
Node: Trailing context is getting confused with trailing optional patterns221709
Node: Is flex GNU or not?222952
Node: ERASEME53224625
Node: I need to scan if-then-else blocks and while loops225395
Node: ERASEME55226594
Node: ERASEME56227692
Node: ERASEME57229050
Node: Is there a repository for flex scanners?230048
Node: How can I conditionally compile or preprocess my flex input file?230363
Node: Where can I find grammars for lex and yacc?230836
Node: I get an end-of-buffer message for each character scanned.231183
Node: unnamed-faq-62231778
Node: unnamed-faq-63232796
Node: unnamed-faq-64234093
Node: unnamed-faq-65235059
Node: unnamed-faq-66235845
Node: unnamed-faq-67236960
Node: unnamed-faq-68237947
Node: unnamed-faq-69239089
Node: unnamed-faq-70239802
Node: unnamed-faq-71240563
Node: unnamed-faq-72241772
Node: unnamed-faq-73242815
Node: unnamed-faq-74243739
Node: unnamed-faq-75244684
Node: unnamed-faq-76245816
Node: unnamed-faq-77246522
Node: unnamed-faq-78247415
Node: unnamed-faq-79248413
Node: unnamed-faq-80250113
Node: unnamed-faq-81251431
Node: unnamed-faq-82254231
Node: unnamed-faq-83255188
Node: unnamed-faq-84256968
Node: unnamed-faq-85258071
Node: unnamed-faq-86259078
Node: unnamed-faq-87260016
Node: unnamed-faq-88260662
Node: unnamed-faq-90261493
Node: unnamed-faq-91262756
Node: unnamed-faq-92265184
Node: unnamed-faq-93265683
Node: unnamed-faq-94266610
Node: unnamed-faq-95268022
Node: unnamed-faq-96269540
Node: unnamed-faq-97270299
Node: unnamed-faq-98270966
Node: unnamed-faq-99271631
Node: unnamed-faq-100272560
Node: unnamed-faq-101273270
Node: What is the difference between YYLEX_PARAM and YY_DECL?274083
Node: Why do I get "conflicting types for yylex" error?274604
Node: How do I access the values set in a Flex action from within a Bison action?275134
Node: Appendices275565
Node: Makefiles and Flex275774
Ref: Makefiles and Flex-Footnote-1278970
Ref: Makefiles and Flex-Footnote-2279087
Ref: Makefiles and Flex-Footnote-3279273
Node: Bison Bridge279324
Ref: Bison Bridge-Footnote-1281989
Node: M4 Dependency282181
Ref: M4 Dependency-Footnote-1283586
Node: Common Patterns283721
Node: Numbers284012
Node: Identifiers284989
Node: Quoted Constructs285816
Node: Addresses286868
Node: Indices288181
Node: Concept Index288419
Node: Index of Functions and Macros313702
Node: Index of Variables318598
Node: Index of Data Types320264
Node: Index of Hooks321152
Node: Index of Scanner Options321720

End Tag Table
